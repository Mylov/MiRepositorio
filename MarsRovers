import java.util.ArrayList;
import java.util.Scanner;

/**
 *
 * @author Malcolm
 */
public class Rovers {

 private char vistaActual;
    private int x;
    private int y;
    private int xlim;
    private int ylim;
    private String control;
    
    private static final char norte = 'N';
    private static final char sur = 'S';
    private static final char este = 'E';
    private static final char oeste = 'O';

    private static final char left = 'L';
    private static final char right = 'R';
    private static final char move = 'M';

    public Rovers(char vistaActual, int x, int y, int xl, int yl, String control) {
        this.vistaActual = vistaActual;
        this.x = x;
        this.y = y;
        this.xlim = xl;
        this.ylim = yl;
        this.control = control;
    }
    public Rovers(){
        
    }
    // Lee la cadena de control de la NASA y posiciona al MarsRover
    public void controlRover() {

        for (int i = 0; i < control.length(); i++) {
            if (control.charAt(i) == move) {
                mover();
            } else if (control.charAt(i) == left) {
                girarIzq();
            } else if(control.charAt(i) == right){
                girarDer();
            }
            
        }
    }
    // Hace que el MarsRover se mueva, si este se encuentra en el límite se queda en la misma posición
    public void mover() {
        if (vistaActual == norte) {
            if (ylim >= y+1) {
                y = y+1;
            }
        } else if (vistaActual == este) {
            if (xlim >= x+1) {
                x = x+1;
            }
        } else if (vistaActual == oeste) {
            if (x-1 >= 0) {
                x = x-1;
            }
        } else if (y-1 >= 0) {
            y = y-1;
        }

    }
    // Hace girar a la izquierda el MarsRover
    public void girarIzq() {
        switch (vistaActual) {
            case norte:
                vistaActual = oeste;
                break;
            case sur:
                vistaActual = este;
                break;
            case este:
                vistaActual = norte;
                break;
            case oeste:
                vistaActual = sur;
                break;
        }
    }
    // Hace girar a la derecha el MarsRover
    public void girarDer(){
        switch (vistaActual) {
            case norte:
                vistaActual = este;
                break;
            case sur:
                vistaActual = oeste;
                break;
            case este:
                vistaActual = sur;
                break;
            case oeste:
                vistaActual = norte;
                break;
        }
    }
    
    public boolean validarVista(char c){
        return c==norte||c==oeste||c==este||c==sur;
    }

    public String getControl() {
        return control;
    }

    public void setControl(String control) {
        this.control = control;
    }
    

    public char getVistaActual() {
        return vistaActual;
    }

    public void setVistaActual(char vistaActual) {
        this.vistaActual = vistaActual;
    }

    public int getX() {
        return x;
    }

    public void setX(int x) {
        this.x = x;
    }

    public int getY() {
        return y;
    }

    public void setY(int y) {
        this.y = y;
    }

    public int getXlim() {
        return xlim;
    }

    public void setXlim(int xlim) {
        this.xlim = xlim;
    }

    public int getYlim() {
        return ylim;
    }

    public void setYlim(int ylim) {
        this.ylim = ylim;
    }

    public static void main(String[] args) {
     // TODO code application logic here

        boolean yes=true;
        int x;
        int y;
        String vista;
        ArrayList<Rovers> al = new ArrayList<>();
        Rovers r = new Rovers() ;

        System.out.print("Empezamos el programa... \n Introduzca el límite de la meseta: \n");
        Scanner scanner = new Scanner(System.in);
        System.out.print("x y: ");
        int limx = scanner.nextInt();
        int limy = scanner.nextInt();
        while (yes) {
            do{ //Este ciclo se repite hasta que el usuario haya metido una orientación válida
            System.out.print("Ingrese posición actual del MarsRover: \n");
            System.out.print("x y orientación: ");
             x = scanner.nextInt();
             y = scanner.nextInt();
            vista = scanner.nextLine();
            }while(!r.validarVista(vista.charAt(1)));
            
            System.out.print("Ingrese las instrucciones para explorar: \n");
            String inst = scanner.nextLine();   
 
            Rovers rv = new Rovers(vista.charAt(1), x, y, limx, limy, inst);
            al.add(rv);
           System.out.print("¿Desea insertar otro MarsRover? y:");
           String sc = scanner.next();
           if(!sc.equals("y")) 
               yes =!yes;
           
        }

        for (int j = 0; j < al.size(); j++) {
            System.out.print("La posición actual del MarsRover" + (j + 1) + " es: \n");
            Rovers rv = al.get(j);
            rv.controlRover();
            System.out.print(rv.getX() + " " + rv.getY() + " " + rv.getVistaActual() + "\n");
        }

    }
    
    
}
